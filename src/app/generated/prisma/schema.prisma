generator client {
  provider = "prisma-client-js"
  output   = "../src/app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  persons   Person[]
}

model Person {
  id                String               @id @default(uuid())
  name              String
  relationship      String
  user              User                 @relation(fields: [userId], references: [id])
  userId            String
  loveTypes         PersonLoveCategory[]
  specialDays       SpecialDay[]
  rejectedGiftIdeas RejectedGiftIdea[]
  traits            Trait[]
}

model Gift {
  id           String     @id @default(uuid())
  title        String
  website      String
  done         Boolean    @default(false)
  specialDay   SpecialDay @relation(fields: [specialDayId], references: [id])
  specialDayId String
  createdAt    DateTime   @default(now())
}

model LoveCategory {
  id          String               @id @default(uuid())
  name        String
  catalyst    String
  description String
  persons     PersonLoveCategory[]
}

model PersonLoveCategory {
  id             String       @id @default(uuid())
  person         Person       @relation(fields: [personId], references: [id])
  personId       String
  loveCategory   LoveCategory @relation(fields: [loveCategoryId], references: [id])
  loveCategoryId String
  note           String?
}

model SpecialDay {
  id       String   @id @default(uuid())
  person   Person   @relation(fields: [personId], references: [id])
  personId String
  title    String
  date     DateTime

  gifts Gift[] // âœ… This line is the fix
}

model RejectedGiftIdea {
  id        String   @id @default(uuid())
  person    Person   @relation(fields: [personId], references: [id])
  personId  String
  content   String // The rejected idea's text
  createdAt DateTime @default(now())
}

model Trait {
  id          String    @id @default(uuid())
  person      Person    @relation(fields: [personId], references: [id])
  personId    String
  type        TraitType
  description String
}

enum TraitType {
  likes
  loves
  dislikes
  hates
  struggling_with
}
